// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-xsc-http.proto

#ifndef PROTOBUF_net_2dx_2dmsg_2dxsc_2dhttp_2eproto__INCLUDED
#define PROTOBUF_net_2dx_2dmsg_2dxsc_2dhttp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_net_2dx_2dmsg_2dxsc_2dhttp_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgImHttpRspImpl();
void InitDefaultsXmsgImHttpRsp();
inline void InitDefaults() {
  InitDefaultsXmsgImHttpRsp();
}
}  // namespace protobuf_net_2dx_2dmsg_2dxsc_2dhttp_2eproto
class XmsgImHttpRsp;
class XmsgImHttpRspDefaultTypeInternal;
extern XmsgImHttpRspDefaultTypeInternal _XmsgImHttpRsp_default_instance_;

// ===================================================================

class XmsgImHttpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImHttpRsp) */ {
 public:
  XmsgImHttpRsp();
  virtual ~XmsgImHttpRsp();

  XmsgImHttpRsp(const XmsgImHttpRsp& from);

  inline XmsgImHttpRsp& operator=(const XmsgImHttpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImHttpRsp(XmsgImHttpRsp&& from) noexcept
    : XmsgImHttpRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImHttpRsp& operator=(XmsgImHttpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImHttpRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImHttpRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImHttpRsp*>(
               &_XmsgImHttpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgImHttpRsp* other);
  friend void swap(XmsgImHttpRsp& a, XmsgImHttpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImHttpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImHttpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImHttpRsp& from);
  void MergeFrom(const XmsgImHttpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImHttpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string desc = 2;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes dat = 4;
  void clear_dat();
  static const int kDatFieldNumber = 4;
  const ::std::string& dat() const;
  void set_dat(const ::std::string& value);
  #if LANG_CXX11
  void set_dat(::std::string&& value);
  #endif
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  ::std::string* mutable_dat();
  ::std::string* release_dat();
  void set_allocated_dat(::std::string* dat);

  // uint32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::uint32 ret() const;
  void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XmsgImHttpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr dat_;
  ::google::protobuf::uint32 ret_;
  mutable int _cached_size_;
  friend struct ::protobuf_net_2dx_2dmsg_2dxsc_2dhttp_2eproto::TableStruct;
  friend void ::protobuf_net_2dx_2dmsg_2dxsc_2dhttp_2eproto::InitDefaultsXmsgImHttpRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgImHttpRsp

// uint32 ret = 1;
inline void XmsgImHttpRsp::clear_ret() {
  ret_ = 0u;
}
inline ::google::protobuf::uint32 XmsgImHttpRsp::ret() const {
  // @@protoc_insertion_point(field_get:XmsgImHttpRsp.ret)
  return ret_;
}
inline void XmsgImHttpRsp::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:XmsgImHttpRsp.ret)
}

// string desc = 2;
inline void XmsgImHttpRsp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHttpRsp::desc() const {
  // @@protoc_insertion_point(field_get:XmsgImHttpRsp.desc)
  return desc_.GetNoArena();
}
inline void XmsgImHttpRsp::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHttpRsp.desc)
}
#if LANG_CXX11
inline void XmsgImHttpRsp::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHttpRsp.desc)
}
#endif
inline void XmsgImHttpRsp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHttpRsp.desc)
}
inline void XmsgImHttpRsp::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHttpRsp.desc)
}
inline ::std::string* XmsgImHttpRsp::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHttpRsp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHttpRsp::release_desc() {
  // @@protoc_insertion_point(field_release:XmsgImHttpRsp.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHttpRsp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHttpRsp.desc)
}

// string msg = 3;
inline void XmsgImHttpRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHttpRsp::msg() const {
  // @@protoc_insertion_point(field_get:XmsgImHttpRsp.msg)
  return msg_.GetNoArena();
}
inline void XmsgImHttpRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHttpRsp.msg)
}
#if LANG_CXX11
inline void XmsgImHttpRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHttpRsp.msg)
}
#endif
inline void XmsgImHttpRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHttpRsp.msg)
}
inline void XmsgImHttpRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHttpRsp.msg)
}
inline ::std::string* XmsgImHttpRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHttpRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHttpRsp::release_msg() {
  // @@protoc_insertion_point(field_release:XmsgImHttpRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHttpRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHttpRsp.msg)
}

// bytes dat = 4;
inline void XmsgImHttpRsp::clear_dat() {
  dat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgImHttpRsp::dat() const {
  // @@protoc_insertion_point(field_get:XmsgImHttpRsp.dat)
  return dat_.GetNoArena();
}
inline void XmsgImHttpRsp::set_dat(const ::std::string& value) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgImHttpRsp.dat)
}
#if LANG_CXX11
inline void XmsgImHttpRsp::set_dat(::std::string&& value) {
  
  dat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgImHttpRsp.dat)
}
#endif
inline void XmsgImHttpRsp::set_dat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgImHttpRsp.dat)
}
inline void XmsgImHttpRsp::set_dat(const void* value, size_t size) {
  
  dat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgImHttpRsp.dat)
}
inline ::std::string* XmsgImHttpRsp::mutable_dat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgImHttpRsp.dat)
  return dat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgImHttpRsp::release_dat() {
  // @@protoc_insertion_point(field_release:XmsgImHttpRsp.dat)
  
  return dat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgImHttpRsp::set_allocated_dat(::std::string* dat) {
  if (dat != NULL) {
    
  } else {
    
  }
  dat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dat);
  // @@protoc_insertion_point(field_set_allocated:XmsgImHttpRsp.dat)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2dx_2dmsg_2dxsc_2dhttp_2eproto__INCLUDED
